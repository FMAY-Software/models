-- BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

INSERT INTO EP_PKG
	VALUES ("ced0e670-dd5b-425a-9f70-e70a28e50b16",
	"00000000-0000-0000-0000-000000000000",
	"cd173562-bce8-490b-b1bf-78444d01a391",
	'Functions',
	'',
	0);
INSERT INTO GD_MD
	VALUES ("c200e5a7-5681-46b7-a539-5126655a5df5",
	112,
	"ced0e670-dd5b-425a-9f70-e70a28e50b16",
	108,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	0,
	0,
	0,
	'',
	'Epoch::Library::Epoch::Functions');
INSERT INTO DIM_DIA
	VALUES ("c200e5a7-5681-46b7-a539-5126655a5df5",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_SYNC
	VALUES ("822d5dbe-4ea7-4823-874e-e8d003349a85",
	"00000000-0000-0000-0000-000000000000",
	'init',
	'Initializes the epoch domain, or reinitializes it to the traditional epoch of 
the calendar, if already initialized.',
	'select any cal from instances of CALSYS where selected.name == param.calendar;
if (not empty cal)
  select one epoch related by cal->EDT[R8];
  if (not empty epoch)
    CAL::reset_epoch_date();
    if (epoch.epochSeconds != CAL::get_epoch_start())
      unrelate cal from epoch across R8;
      delete object instance cal;
      select one datetime related by epoch->DT[R7];
      unrelate datetime from epoch across R7;
      delete object instance epoch;
      create object instance ndt of NDT;
      relate ndt to datetime across R7;
      select any datetime from instances of DT where selected.epochSeconds == CAL::get_epoch_start();
      select one ndt related by datetime->NDT[R7];
      unrelate ndt from datetime across R7;
      delete object instance ndt;
    end if;
  end if;
else
  create object instance cal of CALSYS;
  cal.name = param.calendar;
  cal.traditional_epoch = CAL::get_epoch_start();
  create object instance time of TIME;
  time.hour = TIM::get_hour( date:cal.traditional_epoch );
  time.minute = TIM::get_minute( date:cal.traditional_epoch );
  time.second = TIM::get_second( date:cal.traditional_epoch );
  time.subsecondValue = 0;
  create object instance date of DATE;
  date.year = TIM::get_year( date:cal.traditional_epoch );
  date.month = TIM::get_month( date:cal.traditional_epoch );
  date.month_day = TIM::get_day( date:cal.traditional_epoch );
  create object instance datetime of DT;
  relate time to date across R5 using datetime;
end if;
select one epoch related by cal->EDT[R8];
if (empty epoch)
  select any datetime from instances of DT where selected.epochSeconds == cal.traditional_epoch;
  create object instance epoch of EDT;
  relate epoch to datetime across R7;
  relate epoch to cal across R8;
end if;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("7bde1f5e-ee54-41fb-804e-77c7c107ee39",
	"822d5dbe-4ea7-4823-874e-e8d003349a85",
	'calendar',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'The name of the calendar system to initialize.');
INSERT INTO PE_PE
	VALUES ("822d5dbe-4ea7-4823-874e-e8d003349a85",
	1,
	"ced0e670-dd5b-425a-9f70-e70a28e50b16",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO PE_PE
	VALUES ("ced0e670-dd5b-425a-9f70-e70a28e50b16",
	1,
	"00000000-0000-0000-0000-000000000000",
	"39a445fc-8a78-48ca-8812-2cb1d5d45bef",
	7);
INSERT INTO C_C_PROXY
	VALUES ("39a445fc-8a78-48ca-8812-2cb1d5d45bef",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	'Epoch',
	'The epoch domain models date and time usage constrained to a defined epoch 
start. The domain is not modeled to a specific calendar; it uses an external 
Calendar domain to obtain calendar related data.',
	0,
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'../Epoch.xtuml');
INSERT INTO S_SYS_PROXY
	VALUES ("cd173562-bce8-490b-b1bf-78444d01a391",
	'Epoch',
	1,
	'../../../Epoch.xtuml');
